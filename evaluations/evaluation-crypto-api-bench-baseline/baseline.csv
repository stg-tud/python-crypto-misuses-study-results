FILE;LINE;CODE;RELEVANT;COMMENT;LICMA;LICMA COMMENT;COGNICRYPT;COGNICRYPT COMMENT;CRYPTOGUARD;CRYPTOGUARD COMMENT
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABICase10.java;17;Cipher cipher = Cipher.getInstance(String.valueOf(crypto));0;IDEA;0;;0;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABICase11.java;18;Cipher cipher = Cipher.getInstance(crypto);1;;1;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABICase12.java;17;Cipher cipher = Cipher.getInstance(crypto);0;Blowfish;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABICase13.java;19;Cipher cipher = Cipher.getInstance(crypto);0;RC4;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABICase14.java;18;Cipher cipher = Cipher.getInstance(crypto);0;RC2;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABICase15.java;18;Cipher cipher = Cipher.getInstance(crypto);0;IDEA;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABICase1.java;14;Cipher cipher = Cipher.getInstance(crypto);1;;1;;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABICase2.java;14;Cipher cipher = Cipher.getInstance(crypto);0;Blowfish;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABICase3.java;14;Cipher cipher = Cipher.getInstance(crypto);0;RC4;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABICase4.java;14;Cipher cipher = Cipher.getInstance(crypto);0;RC2;0;;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABICase5.java;22;Cipher cipher = Cipher.getInstance(String.valueOf(crypto));1;;0;Nested method calls;0;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABICase6.java;17;Cipher cipher = Cipher.getInstance(String.valueOf(crypto));0;Blowfish;0;;0;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABICase7.java;17;Cipher cipher = Cipher.getInstance(String.valueOf(crypto));0;RC4;0;;0;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABICase8.java;17;Cipher cipher = Cipher.getInstance(String.valueOf(crypto));0;RC2;0;;0;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABICase9.java;14;Cipher cipher = Cipher.getInstance(crypto);0;IDEA;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABMC1.java;14;Cipher cipher = Cipher.getInstance(crypto);1;;1;multiple class example with DES, only detected because of warning identification;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABMC2.java;14;Cipher cipher = Cipher.getInstance(crypto);1;;1;multiple class example with blowfish, just interesting for LICMA as warning example;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABMC3.java;14;Cipher cipher = Cipher.getInstance(crypto);1;;1;multiple class example with RC4, just interesting for LICMA as warning example (in other class RC4);1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABMC4.java;14;Cipher cipher = Cipher.getInstance(crypto);1;;1;multiple class example with RC2, just interesting for LICMA as warning example (in other class RC4);1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABMC5.java;14;Cipher cipher = Cipher.getInstance(crypto);1;;1;multiple class example with IDEA, just interesting for LICMA as warning example (in other class RC4);1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABPSCase1.java;14;"Cipher cipher = Cipher.getInstance(""DES/ECB/PKCS5Padding"")";true negative;condition;1;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABPSCase1.java;16;"    cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABPSCase2.java;13;"Cipher cipher = Cipher.getInstance(""Blowfish"")";0;true negative with Blowfish;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABPSCase2.java;15;"    cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABPSCase3.java;14;"Cipher cipher = Cipher.getInstance(""RC4"")";0;true negative with RC4;0;;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABPSCase3.java;16;"    cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABPSCase4.java;14;"Cipher cipher = Cipher.getInstance(""RC2"")";0;true negative with RC2;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABPSCase4.java;16;"    cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABPSCase5.java;13;"Cipher cipher = Cipher.getInstance(""IDEA"")";0;true negative with IDEA;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABPSCase5.java;15;"    cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABSCase1.java;30;Cipher cipher = Cipher.getInstance(defaultAlgo);1;;0;nested method calls;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABSCase2.java;30;Cipher cipher = Cipher.getInstance(defaultAlgo);0;Blowfish;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABSCase3.java;30;Cipher cipher = Cipher.getInstance(defaultAlgo);0;RC4;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABSCase4.java;31;Cipher cipher = Cipher.getInstance(defaultAlgo);0;RC2;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoABSCase5.java;31;Cipher cipher = Cipher.getInstance(defaultAlgo);0;IDEA;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoBBCase1.java;15;"Cipher cipher = Cipher.getInstance(""DES/ECB/PKCS5Padding"")";1;;1;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoBBCase2.java;14;"Cipher cipher = Cipher.getInstance(""Blowfish"")";0;Blowfish;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoBBCase3.java;14;"Cipher cipher = Cipher.getInstance(""RC4"")";0;RC4;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoBBCase4.java;14;"Cipher cipher = Cipher.getInstance(""RC2"")";0;RC2;0;;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoBBCase5.java;14;"Cipher cipher = Cipher.getInstance(""IDEA"")";0;IDEA;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/brokencrypto/BrokenCryptoCorrected.java;14;"Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";true negative;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/ecbcrypto/EcbInSymmCryptoABICase1.java;14;Cipher cipher = Cipher.getInstance(crypto);1;;1;;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/ecbcrypto/EcbInSymmCryptoABICase2.java;17;Cipher cipher = Cipher.getInstance(String.valueOf(crypto));1;;0;nested method call;0;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/ecbcrypto/EcbInSymmCryptoABICase3.java;18;Cipher cipher = Cipher.getInstance(crypto);1;;1;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/ecbcrypto/EcbInSymmCryptoABMC1.java;15;Cipher cipher = Cipher.getInstance(crypto);1;;1;as warning;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/ecbcrypto/EcbInSymmCryptoABPSCase1.java;13;"Cipher cipher = Cipher.getInstance(""AES/ECB/PKCS5Padding"")";true negative;;1;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/ecbcrypto/EcbInSymmCryptoABPSCase1.java;15;"    cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/ecbcrypto/EcbInSymmCryptoABSCase1.java;34;Cipher cipher = Cipher.getInstance(passedAlgo);1;;0;condition;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/ecbcrypto/EcbInSymmCryptoBBCase1.java;14;"Cipher cipher = Cipher.getInstance(""AES/ECB/PKCS5Padding"")";1;;1;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/ecbcrypto/EcbInSymmCryptoCorrected.java;14;"Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";true negative;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/insecureasymmetriccrypto/InsecureAsymmetricCipherABICase1.java;16;"Cipher cipher = Cipher.getInstance(""RSA"")";0;RSA;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/insecureasymmetriccrypto/InsecureAsymmetricCipherABICase1.java;24;"Cipher dec = Cipher.getInstance(""RSA"")";0;RSA;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/insecureasymmetriccrypto/InsecureAsymmetricCipherABICase2.java;16;"Cipher cipher = Cipher.getInstance(""RSA"")";0;RSA;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/insecureasymmetriccrypto/InsecureAsymmetricCipherABICase2.java;24;"Cipher dec = Cipher.getInstance(""RSA"")";0;RSA;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/insecureasymmetriccrypto/InsecureAsymmetricCipherABICase3.java;23;"Cipher cipher = Cipher.getInstance(""RSA"")";0;RSA;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/insecureasymmetriccrypto/InsecureAsymmetricCipherABICase3.java;31;"Cipher dec = Cipher.getInstance(""RSA"")";0;RSA;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/insecureasymmetriccrypto/InsecureAsymmetricCipherABMC1.java;16;"Cipher cipher = Cipher.getInstance(""RSA"")";0;RSA;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/insecureasymmetriccrypto/InsecureAsymmetricCipherABMC1.java;17;"Cipher dec = Cipher.getInstance(""RSA"")";0;RSA;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/insecureasymmetriccrypto/InsecureAsymmetricCipherABPSCase1.java;20;"Cipher cipher = Cipher.getInstance(""RSA"")";0;RSA;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/insecureasymmetriccrypto/InsecureAsymmetricCipherBBCase1.java;15;"Cipher cipher = Cipher.getInstance(""RSA"")";0;RSA;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/insecureasymmetriccrypto/InsecureAsymmetricCipherBBCase1.java;23;"Cipher dec = Cipher.getInstance(""RSA"")";0;RSA;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablecryptographickey/PredictableCryptographicKeyABSCase1.java;40;cipher = Cipher.getInstance(algoSpec);1;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablecryptographickey/PredictableCryptographicKeyCorrected.java;22;"Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5PADDING"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorABHCase1.java;17;"Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorABHCase2.java;18;"Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorABICase1.java;15;"Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorABICase2.java;20;"Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorABICase3.java;15;"Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorABMC1.java;17;"Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorABPSCase1.java;14;"Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorABSCase1.java;35;"Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorBBCase1.java;14;"Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorCorrected.java;19;"Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorCorrected.java;41;"Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"")";0;CBC;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorABHCase1.java;21;IvParameterSpec ivSpec = new IvParameterSpec(bytes);1;;1;;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorABHCase2.java;31;IvParameterSpec ivSpec = new IvParameterSpec(bytes);1;;0;HashMap;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorABICase1.java;12;IvParameterSpec ivSpec = new IvParameterSpec(bytes);1;;1;;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorABICase2.java;17;IvParameterSpec ivSpec = new IvParameterSpec(new byte[]{Byte.parseByte(String.valueOf(initialization))});1;;0;nested method calls;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorABICase3.java;12;IvParameterSpec ivSpec = new IvParameterSpec(bytes);1;;1;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorABMC1.java;14;IvParameterSpec ivSpec = new IvParameterSpec(bytes);1;;1;as warning;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorABPSCase1.java;24;IvParameterSpec ivSpec = new IvParameterSpec(bytes);true negative;;1;;0;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorABSCase1.java;32;IvParameterSpec ivSpec = new IvParameterSpec(passedIV);1;;0;method calls;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorBBCase1.java;18;IvParameterSpec ivSpec = new IvParameterSpec(bytes);1;;1;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorCorrected.java;25;IvParameterSpec ivSpec = new IvParameterSpec(bytes);0;comment;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticinitializationvector/StaticInitializationVectorCorrected.java;48;IvParameterSpec ivSpec = new IvParameterSpec(bytes);true negative;;0;;0;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablecryptographickey/PredictableCryptographicKeyABHCase1.java;15;"SecretKeySpec keySpec = new SecretKeySpec(keyBytes, ""AES"")";1;;0;method calls;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablecryptographickey/PredictableCryptographicKeyABHCase2.java;22;"SecretKeySpec keySpec = new SecretKeySpec(keyBytes, ""AES"")";1;;0;HashMap;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablecryptographickey/PredictableCryptographicKeyABICase1.java;16;"SecretKeySpec keySpec = new SecretKeySpec(keyBytes, ""AES"")";1;;0;method call;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablecryptographickey/PredictableCryptographicKeyABICase2.java;27;"SecretKeySpec keySpec = new SecretKeySpec(keyBytes, ""AES"")";1;;0;method calls;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablecryptographickey/PredictableCryptographicKeyABICase3.java;18;"SecretKeySpec keySpec = new SecretKeySpec(keyBytes, ""AES"")";1;;0;method call;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablecryptographickey/PredictableCryptographicKeyABMC1.java;10;"SecretKeySpec keySpec = new SecretKeySpec(keyBytes, ""AES"")";1;;0;method call;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablecryptographickey/PredictableCryptographicKeyABPSCase1.java;19;"SecretKeySpec keySpec = new SecretKeySpec(keyBytes, ""AES"")";true negative;;0;;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablecryptographickey/PredictableCryptographicKeyABSCase1.java;52;SecretKeySpec keySpec = new SecretKeySpec(keyBytes,algo);1;;0;method call + condition;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablecryptographickey/PredictableCryptographicKeyBBCase1.java;12;"SecretKeySpec keySpec = new SecretKeySpec(keyBytes, ""AES"")";1;;0;method calls;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablecryptographickey/PredictableCryptographicKeyCorrected.java;18;"SecretKeySpec keySpec = new SecretKeySpec(keyBytes, ""AES"")";true negative;;0;;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablepbepassword/PredictablePBEPasswordABHCase1.java;25;pbeKeySpec = new PBEKeySpec(new String(keyBytes).toCharArray(),salt,iterationCount,keyLength);1;;0;method calls;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablepbepassword/PredictablePBEPasswordABHCase2.java;30;pbeKeySpec = new PBEKeySpec(key.toCharArray(),salt,iterationCount,keyLength);1;;0;HashMap;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablepbepassword/PredictablePBEPasswordABICase1.java;22;pbeKeySpec = new PBEKeySpec(password.toCharArray(),salt,iterationCount,keyLength);1;;0;method call;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablepbepassword/PredictablePBEPasswordABICase2.java;33;pbeKeySpec = new PBEKeySpec(encryptKey,salt,10000,16);1;;0;method calls;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablepbepassword/PredictablePBEPasswordABICase3.java;28;pbeKeySpec = new PBEKeySpec(password.toCharArray(),salt,iterationCount,keyLength);1;;0;method call;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablepbepassword/PredictablePBEPasswordABMC1.java;16;pbeKeySpec = new PBEKeySpec(password.toCharArray(),salt,iterationCount,keyLength);1;;0;method call;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablepbepassword/PredictablePBEPasswordABPSCase1.java;27;pbeKeySpec = new PBEKeySpec(defaultKey.toCharArray(),salt,iterationCount,keyLength);true negative;;0;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablepbepassword/PredictablePBEPasswordABSCase1.java;37;pbeKeySpec = new PBEKeySpec(passedPassword.toCharArray(),salt,iterationCount,keyLength);1;;0;method call + condition;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablepbepassword/PredictablePBEPasswordBBCase1.java;22;pbeKeySpec = new PBEKeySpec(defaultKey.toCharArray(),salt,iterationCount,keyLength);1;;0;method call;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablepbepassword/PredictablePBEPasswordBBCase2.java;22;pbeKeySpec = new PBEKeySpec(defaultKey,salt,iterationCount,keyLength);1;;0;char Array;0;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictablepbepassword/PredictablePBEPasswordCorrected.java;22;pbeKeySpec = new PBEKeySpec(password.toCharArray(),salt,iterationCount,keyLength);true negative;;0;;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/pbeiteration/LessThan1000IterationPBEABHCase1.java;27;pbeParamSpec = new PBEParameterSpec(salt, iteration);1;;0;HashMap;0;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/pbeiteration/LessThan1000IterationPBEABICase1.java;19;pbeParamSpec = new PBEParameterSpec(salt, count);1;;1;;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/pbeiteration/LessThan1000IterationPBEABICase2.java;28;pbeParamSpec = new PBEParameterSpec(salt, Integer.parseInt(String.valueOf(count)));1;;0;method calls;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/pbeiteration/LessThan1000IterationPBEABICase3.java;23;pbe = new PBEParameterSpec(salt, count);1;;1;;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/pbeiteration/LessThan1000IterationPBEABMC1.java;13;pbeParamSpec = new PBEParameterSpec(salt, count);1;;1;as warning;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/pbeiteration/LessThan1000IterationPBEABPSCase1.java;19;pbeParamSpec = new PBEParameterSpec(salt, count);true negative;;1;condition;1;Check < 10000 but nevertheless picks wrong value 5;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/pbeiteration/LessThan1000IterationPBEABSCase1.java;37;pbeParamSpec = new PBEParameterSpec(salt,passedCount);1;;1;shows wrong line but picks wrong value;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/pbeiteration/LessThan1000IterationPBEBBCase1.java;17;pbeParamSpec = new PBEParameterSpec(salt, count);1;;1;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/pbeiteration/LessThan1000IterationPBECorrected.java;17;pbeParamSpec = new PBEParameterSpec(salt, count);true negative;;0;;1;Check < 10000;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticsalts/StaticSaltsABHCase1.java;25;pbeParamSpec = new PBEParameterSpec(salt, count);1;;0;byte Array initialization with variables;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticsalts/StaticSaltsABICase1.java;16;pbeParamSpec = new PBEParameterSpec(salt, count);1;;1;;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticsalts/StaticSaltsABICase2.java;27;pbeParamSpec = new PBEParameterSpec(new byte[]{Byte.parseByte(salt.toString())}, count);1;;0;method calls;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticsalts/StaticSaltsABICase3.java;18;pbeParamSpec = new PBEParameterSpec(salt, count);1;;1;;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticsalts/StaticSaltsABMC1.java;8;pbeParamSpec = new PBEParameterSpec(salt, count);1;;1;as warning;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticsalts/StaticSaltsABPSCase1.java;19;pbeParamSpec = new PBEParameterSpec(salt, count);true negative;;1;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticsalts/StaticSaltsABSCase1.java;27;pbeParamSpec = new PBEParameterSpec(passedSalt, count);1;;0;initialization in constructor;1;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticsalts/StaticSaltsBBCase1.java;15;pbeParamSpec = new PBEParameterSpec(salt, count);1;;1;;1;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/staticsalts/StaticSaltsCorrected.java;17;pbeParamSpec = new PBEParameterSpec(salt, count);true negative;;0;;0;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictableseeds/PredictableSeedsABHCase4.java;22;SecureRandom sr = new SecureRandom(new byte[]{b});1;;0;Array declaration in ();0;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictableseeds/PredictableSeedsABICase2.java;12;SecureRandom sr = new SecureRandom(new byte[]{seed});1;;0;Array declaration in ();0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictableseeds/PredictableSeedsABICase4.java;24;SecureRandom sr = new SecureRandom(new byte[]{Byte.parseByte(seed.toString())});1;;0;method calls;0;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictableseeds/PredictableSeedsABICase6.java;16;SecureRandom sr = new SecureRandom(new byte[]{seed});1;;0;Array declaration in ();0;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictableseeds/PredictableSeedsABMC2.java;7;SecureRandom sr = new SecureRandom(new byte[]{seed});1;;0;Array declaration in ();0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictableseeds/PredictableSeedsABPSCase2.java;13;//SecureRandom sr = new SecureRandom(new byte[]{seed});0;comment;0;;0;;0;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictableseeds/PredictableSeedsABPSCase2.java;14;SecureRandom sr = new SecureRandom(seed);true negative;;1;condition;0;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictableseeds/PredictableSeedsABSCase2.java;30;SecureRandom sr = new SecureRandom(new byte[]{passedSeed});1;;0;method calls + array declaration in ();0;;1;
/home/ubuntu/crypto-tool-evaluation/CryptoAPI-Bench/src/main/java/org/cryptoapi/bench/predictableseeds/PredictableSeedsBBCase2.java;8;SecureRandom sr = new SecureRandom(new byte[]{seed});1;;0;Array declaration in ();0;;1;
Number of positive test cases;63;Summe;;positives;26;;50;;29;
Number of negative test cases;15;;;positives percentage;41,2698412698413;;79,3650793650794;;46,031746031746;
;;;;negatives;9;;7;;7;
;;;;negatives percentage;60;;46,6666666666667;;46,6666666666667;
