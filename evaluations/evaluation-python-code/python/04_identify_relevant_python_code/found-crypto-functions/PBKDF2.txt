/media/ubuntu/DATA/repositories-python/ansible__ansible/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/SelfTest/Protocol/test_KDF.py:            res  = PBKDF2(v[0], t2b(v[1]), v[2], v[3])
/media/ubuntu/DATA/repositories-python/ansible__ansible/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/SelfTest/Protocol/test_KDF.py:            res2 = PBKDF2(v[0], t2b(v[1]), v[2], v[3], prf)
/media/ubuntu/DATA/repositories-python/ansible__ansible/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None):
/media/ubuntu/DATA/repositories-python/localstack__localstack/requirements_licma_analysis/pycryptodomex-3.4.9-cp36-cp36m-manylinux1_x86_64/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, count)
/media/ubuntu/DATA/repositories-python/localstack__localstack/requirements_licma_analysis/pycryptodomex-3.4.9-cp36-cp36m-manylinux1_x86_64/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, iteration_count)
/media/ubuntu/DATA/repositories-python/localstack__localstack/requirements_licma_analysis/pycryptodomex-3.4.9-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters)
/media/ubuntu/DATA/repositories-python/localstack__localstack/requirements_licma_analysis/pycryptodomex-3.4.9-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA1)
/media/ubuntu/DATA/repositories-python/localstack__localstack/requirements_licma_analysis/pycryptodomex-3.4.9-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA256)
/media/ubuntu/DATA/repositories-python/localstack__localstack/requirements_licma_analysis/pycryptodomex-3.4.9-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None):
/media/ubuntu/DATA/repositories-python/localstack__localstack/requirements_licma_analysis/pycryptodomex-3.4.9-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:    stage_1 = PBKDF2(password, salt, p * 128 * r, 1, prf=prf_hmac_sha256)
/media/ubuntu/DATA/repositories-python/localstack__localstack/requirements_licma_analysis/pycryptodomex-3.4.9-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:    dk = PBKDF2(password,
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/wifi-0.3.8/wifi-0.3.8/wifi/scheme.py:                passkey = PBKDF2(passkey, cell.ssid, 4096).hexread(32)
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, count)
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, iteration_count,
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters)
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA1)
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA256)
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:            pr1 = PBKDF2(password, salt, 16, 100,
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:            pr2 = PBKDF2(password, salt, 16, 100, hmac_hash_module=hashmod)
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2("xxx", b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2(b("xxx"), "yyy", 16, 10)
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None, hmac_hash_module=None):
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:    stage_1 = PBKDF2(password, salt, p * 128 * r, 1, prf=prf_hmac_sha256)
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:    dk = PBKDF2(password,
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pbkdf2-1.3/pbkdf2-1.3/pbkdf2.py:#   key = PBKDF2("This passphrase is a secret.", salt).read(32) # 256-bit key
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pbkdf2-1.3/pbkdf2-1.3/pbkdf2.py:class PBKDF2(object):
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pbkdf2-1.3/pbkdf2-1.3/pbkdf2.py:    rawhash = PBKDF2(word, salt, iterations).read(24)
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pbkdf2-1.3/pbkdf2-1.3/test/test_pbkdf2.py:        result = PBKDF2("password", "ATHENA.MIT.EDUraeburn", 1).read(16)
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pbkdf2-1.3/pbkdf2-1.3/test/test_pbkdf2.py:        result = PBKDF2("password", "ATHENA.MIT.EDUraeburn", 1200).hexread(32)
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pbkdf2-1.3/pbkdf2-1.3/test/test_pbkdf2.py:        result = PBKDF2("X"*64, "pass phrase equals block size", 1200).hexread(32)
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pbkdf2-1.3/pbkdf2-1.3/test/test_pbkdf2.py:        result = PBKDF2("X"*65, "pass phrase exceeds block size", 1200).hexread(32)
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pbkdf2-1.3/pbkdf2-1.3/test/test_pbkdf2.py:        f = PBKDF2("kickstart", "workbench", 256)
/media/ubuntu/DATA/repositories-python/nicolargo__glances/requirements_licma_analysis/pbkdf2-1.3/pbkdf2-1.3/test/test_pbkdf2.py:        expected = PBKDF2("kickstart", "workbench", 256).read(40)
/media/ubuntu/DATA/repositories-python/Kr1s77__awesome-python-login-model/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, count)
/media/ubuntu/DATA/repositories-python/Kr1s77__awesome-python-login-model/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, iteration_count,
/media/ubuntu/DATA/repositories-python/Kr1s77__awesome-python-login-model/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters)
/media/ubuntu/DATA/repositories-python/Kr1s77__awesome-python-login-model/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA1)
/media/ubuntu/DATA/repositories-python/Kr1s77__awesome-python-login-model/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA256)
/media/ubuntu/DATA/repositories-python/Kr1s77__awesome-python-login-model/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:            pr1 = PBKDF2(password, salt, 16, 100,
/media/ubuntu/DATA/repositories-python/Kr1s77__awesome-python-login-model/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:            pr2 = PBKDF2(password, salt, 16, 100, hmac_hash_module=hashmod)
/media/ubuntu/DATA/repositories-python/Kr1s77__awesome-python-login-model/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2("xxx", b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/Kr1s77__awesome-python-login-model/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/Kr1s77__awesome-python-login-model/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2(b("xxx"), "yyy", 16, 10)
/media/ubuntu/DATA/repositories-python/Kr1s77__awesome-python-login-model/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/Kr1s77__awesome-python-login-model/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None, hmac_hash_module=None):
/media/ubuntu/DATA/repositories-python/Kr1s77__awesome-python-login-model/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:    stage_1 = PBKDF2(password, salt, p * 128 * r, 1, prf=prf_hmac_sha256)
/media/ubuntu/DATA/repositories-python/Kr1s77__awesome-python-login-model/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:    dk = PBKDF2(password,
/media/ubuntu/DATA/repositories-python/wifiphisher__wifiphisher/wifiphisher/extensions/handshakeverify.py:            pmk = PBKDF2(passphrase, essid, 4096).read(32)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, count)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, iteration_count,
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA1)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA256)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:            pr1 = PBKDF2(password, salt, 16, 100,
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:            pr2 = PBKDF2(password, salt, 16, 100, hmac_hash_module=hashmod)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2("xxx", b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2(b("xxx"), "yyy", 16, 10)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None, hmac_hash_module=None):
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:    stage_1 = PBKDF2(password, salt, p * 128 * r, 1, prf=prf_hmac_sha256)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:    dk = PBKDF2(password,
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.7-cp36-cp36m-manylinux1_x86_64/Crypto/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, count)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.7-cp36-cp36m-manylinux1_x86_64/Crypto/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, iteration_count,
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.7-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.7-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA1)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.7-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA256)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.7-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:            pr1 = PBKDF2(password, salt, 16, 100,
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.7-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:            pr2 = PBKDF2(password, salt, 16, 100, hmac_hash_module=hashmod)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.7-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2("xxx", b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.7-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.7-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2(b("xxx"), "yyy", 16, 10)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.7-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.7-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None, hmac_hash_module=None):
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.7-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:    stage_1 = PBKDF2(password, salt, p * 128 * r, 1, prf=prf_hmac_sha256)
/media/ubuntu/DATA/repositories-python/netbox-community__netbox/requirements_licma_analysis/pycryptodome-3.9.7-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:    dk = PBKDF2(password,
/media/ubuntu/DATA/repositories-python/newsapps__beeswithmachineguns/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/SelfTest/Protocol/test_KDF.py:            res  = PBKDF2(v[0], t2b(v[1]), v[2], v[3])
/media/ubuntu/DATA/repositories-python/newsapps__beeswithmachineguns/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/SelfTest/Protocol/test_KDF.py:            res2 = PBKDF2(v[0], t2b(v[1]), v[2], v[3], prf)
/media/ubuntu/DATA/repositories-python/newsapps__beeswithmachineguns/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None):
/media/ubuntu/DATA/repositories-python/n1nj4sec__pupy/requirements_licma_analysis/pycryptodome-3.7.0-cp36-cp36m-manylinux1_x86_64/Crypto/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, count)
/media/ubuntu/DATA/repositories-python/n1nj4sec__pupy/requirements_licma_analysis/pycryptodome-3.7.0-cp36-cp36m-manylinux1_x86_64/Crypto/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, iteration_count)
/media/ubuntu/DATA/repositories-python/n1nj4sec__pupy/requirements_licma_analysis/pycryptodome-3.7.0-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters)
/media/ubuntu/DATA/repositories-python/n1nj4sec__pupy/requirements_licma_analysis/pycryptodome-3.7.0-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA1)
/media/ubuntu/DATA/repositories-python/n1nj4sec__pupy/requirements_licma_analysis/pycryptodome-3.7.0-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA256)
/media/ubuntu/DATA/repositories-python/n1nj4sec__pupy/requirements_licma_analysis/pycryptodome-3.7.0-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:            pr1 = PBKDF2(password, salt, 16, 100,
/media/ubuntu/DATA/repositories-python/n1nj4sec__pupy/requirements_licma_analysis/pycryptodome-3.7.0-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:            pr2 = PBKDF2(password, salt, 16, 100, hmac_hash_module=hashmod)
/media/ubuntu/DATA/repositories-python/n1nj4sec__pupy/requirements_licma_analysis/pycryptodome-3.7.0-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2("xxx", b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/n1nj4sec__pupy/requirements_licma_analysis/pycryptodome-3.7.0-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/n1nj4sec__pupy/requirements_licma_analysis/pycryptodome-3.7.0-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2(b("xxx"), "yyy", 16, 10)
/media/ubuntu/DATA/repositories-python/n1nj4sec__pupy/requirements_licma_analysis/pycryptodome-3.7.0-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/n1nj4sec__pupy/requirements_licma_analysis/pycryptodome-3.7.0-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None, hmac_hash_module=None):
/media/ubuntu/DATA/repositories-python/n1nj4sec__pupy/requirements_licma_analysis/pycryptodome-3.7.0-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:    stage_1 = PBKDF2(password, salt, p * 128 * r, 1, prf=prf_hmac_sha256)
/media/ubuntu/DATA/repositories-python/n1nj4sec__pupy/requirements_licma_analysis/pycryptodome-3.7.0-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:    dk = PBKDF2(password,
/media/ubuntu/DATA/repositories-python/trustedsec__social-engineer-toolkit/requirements_licma_analysis/impacket-0.9.21/impacket-0.9.21/impacket/krb5/crypto.py:        seed = PBKDF2(string, salt, cls.seedsize, iterations, prf)
/media/ubuntu/DATA/repositories-python/trustedsec__social-engineer-toolkit/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, count)
/media/ubuntu/DATA/repositories-python/trustedsec__social-engineer-toolkit/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, iteration_count,
/media/ubuntu/DATA/repositories-python/trustedsec__social-engineer-toolkit/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters)
/media/ubuntu/DATA/repositories-python/trustedsec__social-engineer-toolkit/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA1)
/media/ubuntu/DATA/repositories-python/trustedsec__social-engineer-toolkit/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA256)
/media/ubuntu/DATA/repositories-python/trustedsec__social-engineer-toolkit/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:            pr1 = PBKDF2(password, salt, 16, 100,
/media/ubuntu/DATA/repositories-python/trustedsec__social-engineer-toolkit/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:            pr2 = PBKDF2(password, salt, 16, 100, hmac_hash_module=hashmod)
/media/ubuntu/DATA/repositories-python/trustedsec__social-engineer-toolkit/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2("xxx", b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/trustedsec__social-engineer-toolkit/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/trustedsec__social-engineer-toolkit/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2(b("xxx"), "yyy", 16, 10)
/media/ubuntu/DATA/repositories-python/trustedsec__social-engineer-toolkit/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/trustedsec__social-engineer-toolkit/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None, hmac_hash_module=None):
/media/ubuntu/DATA/repositories-python/trustedsec__social-engineer-toolkit/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:    stage_1 = PBKDF2(password, salt, p * 128 * r, 1, prf=prf_hmac_sha256)
/media/ubuntu/DATA/repositories-python/trustedsec__social-engineer-toolkit/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:    dk = PBKDF2(password,
/media/ubuntu/DATA/repositories-python/injetlee__Python/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/SelfTest/Protocol/test_KDF.py:            res  = PBKDF2(v[0], t2b(v[1]), v[2], v[3])
/media/ubuntu/DATA/repositories-python/injetlee__Python/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/SelfTest/Protocol/test_KDF.py:            res2 = PBKDF2(v[0], t2b(v[1]), v[2], v[3], prf)
/media/ubuntu/DATA/repositories-python/injetlee__Python/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None):
/media/ubuntu/DATA/repositories-python/SecureAuthCorp__impacket/impacket/krb5/crypto.py:        seed = PBKDF2(string, salt, cls.seedsize, iterations, prf)
/media/ubuntu/DATA/repositories-python/SecureAuthCorp__impacket/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, count)
/media/ubuntu/DATA/repositories-python/SecureAuthCorp__impacket/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, iteration_count,
/media/ubuntu/DATA/repositories-python/SecureAuthCorp__impacket/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters)
/media/ubuntu/DATA/repositories-python/SecureAuthCorp__impacket/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA1)
/media/ubuntu/DATA/repositories-python/SecureAuthCorp__impacket/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA256)
/media/ubuntu/DATA/repositories-python/SecureAuthCorp__impacket/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:            pr1 = PBKDF2(password, salt, 16, 100,
/media/ubuntu/DATA/repositories-python/SecureAuthCorp__impacket/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:            pr2 = PBKDF2(password, salt, 16, 100, hmac_hash_module=hashmod)
/media/ubuntu/DATA/repositories-python/SecureAuthCorp__impacket/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2("xxx", b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/SecureAuthCorp__impacket/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/SecureAuthCorp__impacket/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2(b("xxx"), "yyy", 16, 10)
/media/ubuntu/DATA/repositories-python/SecureAuthCorp__impacket/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/SecureAuthCorp__impacket/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None, hmac_hash_module=None):
/media/ubuntu/DATA/repositories-python/SecureAuthCorp__impacket/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:    stage_1 = PBKDF2(password, salt, p * 128 * r, 1, prf=prf_hmac_sha256)
/media/ubuntu/DATA/repositories-python/SecureAuthCorp__impacket/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:    dk = PBKDF2(password,
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/pycryptodomex-3.9.7/Doc/src/protocol/kdf.rst:    keys = PBKDF2(password, salt, 64, count=1000000, hmac_hash_module=SHA512)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/pycryptodomex-3.9.7/lib/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, count)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/pycryptodomex-3.9.7/lib/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, iteration_count,
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/pycryptodomex-3.9.7/lib/Cryptodome/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None, hmac_hash_module=None):
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/pycryptodomex-3.9.7/lib/Cryptodome/Protocol/KDF.py:    stage_1 = PBKDF2(password, salt, p * 128 * r, 1, prf=prf_hmac_sha256)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/pycryptodomex-3.9.7/lib/Cryptodome/Protocol/KDF.py:    dk = PBKDF2(password,
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/pycryptodomex-3.9.7/lib/Cryptodome/Protocol/KDF.pyi:def PBKDF2(password: str, salt: bytes, dkLen: Optional[int]=16, count: Optional[int]=1000, prf: Optional[RNG]=None, hmac_hash_module: Optional[ModuleType]=None) -> bytes: ...
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/pycryptodomex-3.9.7/lib/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/pycryptodomex-3.9.7/lib/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA1)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/pycryptodomex-3.9.7/lib/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA256)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/pycryptodomex-3.9.7/lib/Cryptodome/SelfTest/Protocol/test_KDF.py:            pr1 = PBKDF2(password, salt, 16, 100,
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/pycryptodomex-3.9.7/lib/Cryptodome/SelfTest/Protocol/test_KDF.py:            pr2 = PBKDF2(password, salt, 16, 100, hmac_hash_module=hashmod)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/pycryptodomex-3.9.7/lib/Cryptodome/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2("xxx", b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/pycryptodomex-3.9.7/lib/Cryptodome/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/pycryptodomex-3.9.7/lib/Cryptodome/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2(b("xxx"), "yyy", 16, 10)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/pycryptodomex-3.9.7/lib/Cryptodome/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/cloudera__hue/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/SelfTest/Protocol/test_KDF.py:            res  = PBKDF2(v[0], t2b(v[1]), v[2], v[3])
/media/ubuntu/DATA/repositories-python/cloudera__hue/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/SelfTest/Protocol/test_KDF.py:            res2 = PBKDF2(v[0], t2b(v[1]), v[2], v[3], prf)
/media/ubuntu/DATA/repositories-python/cloudera__hue/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None):
/media/ubuntu/DATA/repositories-python/posativ__isso/isso/tests/test_utils_hash.py:        pbkdf2 = PBKDF2(iterations=1000)
/media/ubuntu/DATA/repositories-python/posativ__isso/isso/tests/test_utils_hash.py:        a = PBKDF2(b"a", iterations=1)
/media/ubuntu/DATA/repositories-python/posativ__isso/isso/tests/test_utils_hash.py:        b = PBKDF2(b"b", iterations=1)
/media/ubuntu/DATA/repositories-python/posativ__isso/isso/utils/hash.py:class PBKDF2(Hash):
/media/ubuntu/DATA/repositories-python/posativ__isso/isso/utils/hash.py:        return PBKDF2(salt, **kwargs)
/media/ubuntu/DATA/repositories-python/PokemonGoF__PokemonGo-Bot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, count)
/media/ubuntu/DATA/repositories-python/PokemonGoF__PokemonGo-Bot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, iteration_count,
/media/ubuntu/DATA/repositories-python/PokemonGoF__PokemonGo-Bot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters)
/media/ubuntu/DATA/repositories-python/PokemonGoF__PokemonGo-Bot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA1)
/media/ubuntu/DATA/repositories-python/PokemonGoF__PokemonGo-Bot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA256)
/media/ubuntu/DATA/repositories-python/PokemonGoF__PokemonGo-Bot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:            pr1 = PBKDF2(password, salt, 16, 100,
/media/ubuntu/DATA/repositories-python/PokemonGoF__PokemonGo-Bot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:            pr2 = PBKDF2(password, salt, 16, 100, hmac_hash_module=hashmod)
/media/ubuntu/DATA/repositories-python/PokemonGoF__PokemonGo-Bot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2("xxx", b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/PokemonGoF__PokemonGo-Bot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/PokemonGoF__PokemonGo-Bot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2(b("xxx"), "yyy", 16, 10)
/media/ubuntu/DATA/repositories-python/PokemonGoF__PokemonGo-Bot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/PokemonGoF__PokemonGo-Bot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None, hmac_hash_module=None):
/media/ubuntu/DATA/repositories-python/PokemonGoF__PokemonGo-Bot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:    stage_1 = PBKDF2(password, salt, p * 128 * r, 1, prf=prf_hmac_sha256)
/media/ubuntu/DATA/repositories-python/PokemonGoF__PokemonGo-Bot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:    dk = PBKDF2(password,
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/impacket-0.9.21/impacket-0.9.21/impacket/krb5/crypto.py:        seed = PBKDF2(string, salt, cls.seedsize, iterations, prf)
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/pycryptodomex-3.9.7-cp36-cp36m-manylinux1_x86_64/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, count)
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/pycryptodomex-3.9.7-cp36-cp36m-manylinux1_x86_64/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, iteration_count,
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/pycryptodomex-3.9.7-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters)
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/pycryptodomex-3.9.7-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA1)
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/pycryptodomex-3.9.7-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA256)
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/pycryptodomex-3.9.7-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:            pr1 = PBKDF2(password, salt, 16, 100,
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/pycryptodomex-3.9.7-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:            pr2 = PBKDF2(password, salt, 16, 100, hmac_hash_module=hashmod)
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/pycryptodomex-3.9.7-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2("xxx", b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/pycryptodomex-3.9.7-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/pycryptodomex-3.9.7-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2(b("xxx"), "yyy", 16, 10)
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/pycryptodomex-3.9.7-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/pycryptodomex-3.9.7-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None, hmac_hash_module=None):
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/pycryptodomex-3.9.7-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:    stage_1 = PBKDF2(password, salt, p * 128 * r, 1, prf=prf_hmac_sha256)
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/pycryptodomex-3.9.7-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:    dk = PBKDF2(password,
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/minikerberos-0.2.3-py3-none-any/minikerberos/protocol/encryption.py:		#seed = PBKDF2(string, salt, cls.seedsize, iterations, prf)
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/minikerberos-0.2.3-py3-none-any/minikerberos/protocol/encryption.py:		seed = PBKDF2(string, salt, iterations, cls.seedsize)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, count)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, iteration_count,
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA1)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA256)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:            pr1 = PBKDF2(password, salt, 16, 100,
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:            pr2 = PBKDF2(password, salt, 16, 100, hmac_hash_module=hashmod)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2("xxx", b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2(b("xxx"), "yyy", 16, 10)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None, hmac_hash_module=None):
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:    stage_1 = PBKDF2(password, salt, p * 128 * r, 1, prf=prf_hmac_sha256)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:    dk = PBKDF2(password,
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, count)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, iteration_count,
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA1)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA256)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:            pr1 = PBKDF2(password, salt, 16, 100,
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:            pr2 = PBKDF2(password, salt, 16, 100, hmac_hash_module=hashmod)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2("xxx", b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2(b("xxx"), "yyy", 16, 10)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None, hmac_hash_module=None):
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:    stage_1 = PBKDF2(password, salt, p * 128 * r, 1, prf=prf_hmac_sha256)
/media/ubuntu/DATA/repositories-python/instagrambot__instabot/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:    dk = PBKDF2(password,
/media/ubuntu/DATA/repositories-python/Tautulli__Tautulli/plexpy/notifiers.py:            key = PBKDF2(passphrase, salt, dkLen=key_length, count=iterations,
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/impacket-0.9.21/impacket-0.9.21/impacket/krb5/crypto.py:        seed = PBKDF2(string, salt, cls.seedsize, iterations, prf)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, count)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, iteration_count,
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA1)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA256)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:            pr1 = PBKDF2(password, salt, 16, 100,
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:            pr2 = PBKDF2(password, salt, 16, 100, hmac_hash_module=hashmod)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2("xxx", b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2(b("xxx"), "yyy", 16, 10)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None, hmac_hash_module=None):
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:    stage_1 = PBKDF2(password, salt, p * 128 * r, 1, prf=prf_hmac_sha256)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:    dk = PBKDF2(password,
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, count)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, iteration_count,
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA1)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA256)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:            pr1 = PBKDF2(password, salt, 16, 100,
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:            pr2 = PBKDF2(password, salt, 16, 100, hmac_hash_module=hashmod)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2("xxx", b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2(b("xxx"), "yyy", 16, 10)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None, hmac_hash_module=None):
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:    stage_1 = PBKDF2(password, salt, p * 128 * r, 1, prf=prf_hmac_sha256)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/pycryptodomex-3.9.8-cp36-cp36m-manylinux1_x86_64/Cryptodome/Protocol/KDF.py:    dk = PBKDF2(password,
/media/ubuntu/DATA/repositories-python/mantl__mantl/requirements_licma_analysis/ansible-1.9.6/ansible-1.9.6/lib/ansible/utils/vault.py:        derivedkey = PBKDF2(password, salt, dkLen=(2 * keylength) + ivlength, 
/media/ubuntu/DATA/repositories-python/mantl__mantl/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/SelfTest/Protocol/test_KDF.py:            res  = PBKDF2(v[0], t2b(v[1]), v[2], v[3])
/media/ubuntu/DATA/repositories-python/mantl__mantl/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/SelfTest/Protocol/test_KDF.py:            res2 = PBKDF2(v[0], t2b(v[1]), v[2], v[3], prf)
/media/ubuntu/DATA/repositories-python/mantl__mantl/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None):
/media/ubuntu/DATA/repositories-python/golemfactory__golem/requirements_licma_analysis/bitcoin-1.1.42/bitcoin-1.1.42/bitcoin/mnemonic.py:				return PBKDF2(password=password,salt=salt,dkLen=64,count=iters,prf=lambda p,s: HMAC.new(p,s,SHA512).digest())
/media/ubuntu/DATA/repositories-python/golemfactory__golem/requirements_licma_analysis/bitcoin-1.1.42/bitcoin-1.1.42/bitcoin/mnemonic.py:					return PBKDF2(password,salt, iterations=iters, macmodule=hmac, digestmodule=hashlib.sha512).read(64)
/media/ubuntu/DATA/repositories-python/the0demiurge__ShadowSocksShare/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, count)
/media/ubuntu/DATA/repositories-python/the0demiurge__ShadowSocksShare/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/IO/_PBES.py:            key = PBKDF2(passphrase, salt, key_size, iteration_count,
/media/ubuntu/DATA/repositories-python/the0demiurge__ShadowSocksShare/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters)
/media/ubuntu/DATA/repositories-python/the0demiurge__ShadowSocksShare/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA1)
/media/ubuntu/DATA/repositories-python/the0demiurge__ShadowSocksShare/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:                res = PBKDF2(password, salt, out_len, iters, prf_SHA256)
/media/ubuntu/DATA/repositories-python/the0demiurge__ShadowSocksShare/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:            pr1 = PBKDF2(password, salt, 16, 100,
/media/ubuntu/DATA/repositories-python/the0demiurge__ShadowSocksShare/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:            pr2 = PBKDF2(password, salt, 16, 100, hmac_hash_module=hashmod)
/media/ubuntu/DATA/repositories-python/the0demiurge__ShadowSocksShare/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2("xxx", b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/the0demiurge__ShadowSocksShare/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/the0demiurge__ShadowSocksShare/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k1 = PBKDF2(b("xxx"), "yyy", 16, 10)
/media/ubuntu/DATA/repositories-python/the0demiurge__ShadowSocksShare/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/SelfTest/Protocol/test_KDF.py:        k2 = PBKDF2(b("xxx"), b("yyy"), 16, 10)
/media/ubuntu/DATA/repositories-python/the0demiurge__ShadowSocksShare/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None, hmac_hash_module=None):
/media/ubuntu/DATA/repositories-python/the0demiurge__ShadowSocksShare/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:    stage_1 = PBKDF2(password, salt, p * 128 * r, 1, prf=prf_hmac_sha256)
/media/ubuntu/DATA/repositories-python/the0demiurge__ShadowSocksShare/requirements_licma_analysis/pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64/Crypto/Protocol/KDF.py:    dk = PBKDF2(password,
/media/ubuntu/DATA/repositories-python/facebookarchive__python-instagram/requirements_licma_analysis/Beaker-1.6.4/Beaker-1.6.4/beaker/crypto/__init__.py:    keystream = PBKDF2(master_key, salt, iterations=iterations)
/media/ubuntu/DATA/repositories-python/facebookarchive__python-instagram/requirements_licma_analysis/Beaker-1.6.4/Beaker-1.6.4/beaker/crypto/pbkdf2.py:#   key = PBKDF2("This passphrase is a secret.", salt).read(32) # 256-bit key
/media/ubuntu/DATA/repositories-python/facebookarchive__python-instagram/requirements_licma_analysis/Beaker-1.6.4/Beaker-1.6.4/beaker/crypto/pbkdf2.py:class PBKDF2(object):
/media/ubuntu/DATA/repositories-python/facebookarchive__python-instagram/requirements_licma_analysis/Beaker-1.6.4/Beaker-1.6.4/beaker/crypto/pbkdf2.py:    rawhash = PBKDF2(word, salt, iterations).read(24)
/media/ubuntu/DATA/repositories-python/facebookarchive__python-instagram/requirements_licma_analysis/Beaker-1.6.4/Beaker-1.6.4/beaker/crypto/pbkdf2.py:    result = PBKDF2("password", "ATHENA.MIT.EDUraeburn", 1).read(16)
/media/ubuntu/DATA/repositories-python/facebookarchive__python-instagram/requirements_licma_analysis/Beaker-1.6.4/Beaker-1.6.4/beaker/crypto/pbkdf2.py:    result = PBKDF2("password", "ATHENA.MIT.EDUraeburn", 1200).hexread(32)
/media/ubuntu/DATA/repositories-python/facebookarchive__python-instagram/requirements_licma_analysis/Beaker-1.6.4/Beaker-1.6.4/beaker/crypto/pbkdf2.py:    result = PBKDF2("X" * 64, "pass phrase equals block size", 1200).hexread(32)
/media/ubuntu/DATA/repositories-python/facebookarchive__python-instagram/requirements_licma_analysis/Beaker-1.6.4/Beaker-1.6.4/beaker/crypto/pbkdf2.py:    result = PBKDF2("X" * 65, "pass phrase exceeds block size", 1200).hexread(32)
/media/ubuntu/DATA/repositories-python/facebookarchive__python-instagram/requirements_licma_analysis/Beaker-1.6.4/Beaker-1.6.4/beaker/crypto/pbkdf2.py:    f = PBKDF2("kickstart", "workbench", 256)
/media/ubuntu/DATA/repositories-python/facebookarchive__python-instagram/requirements_licma_analysis/Beaker-1.6.4/Beaker-1.6.4/beaker/crypto/pbkdf2.py:    expected = PBKDF2("kickstart", "workbench", 256).read(40)
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/ansible-2.3.0.0/ansible-2.3.0.0/lib/ansible/parsing/vault/__init__.py:        b_derivedkey = PBKDF2(b_password, b_salt, dkLen=(2 * keylength) + ivlength,
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/SelfTest/Protocol/test_KDF.py:            res  = PBKDF2(v[0], t2b(v[1]), v[2], v[3])
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/SelfTest/Protocol/test_KDF.py:            res2 = PBKDF2(v[0], t2b(v[1]), v[2], v[3], prf)
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/pycrypto-2.6.1/pycrypto-2.6.1/lib/Crypto/Protocol/KDF.py:def PBKDF2(password, salt, dkLen=16, count=1000, prf=None):
