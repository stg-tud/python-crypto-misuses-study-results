/media/ubuntu/DATA/repositories-python/nvbn__thefuck/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/ansible__ansible/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/apache__incubator-superset/requirements_licma_analysis/cryptography-2.8-cp34-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/apache__incubator-superset/requirements_licma_analysis/SQLAlchemy-Utils-0.36.1/SQLAlchemy-Utils-0.36.1/sqlalchemy_utils/types/encrypted/encrypted_type.py:        self.fernet = Fernet(self.secret_key)
/media/ubuntu/DATA/repositories-python/certbot__certbot/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/certbot__certbot/requirements_licma_analysis/cryptography-2.8-cp34-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/getsentry__sentry/src/sentry/conf/server.py:    # ('0', Fernet(b'super secret key probably from Fernet.generate_key()')),
/media/ubuntu/DATA/repositories-python/getsentry__sentry/tests/sentry/utils/test_encryption.py:            schemes=(("1", Fernet("J5NxyG0w1OyZEDdEOX0Nyv2upm5H3J35rTEb1jEiVbs=")),)
/media/ubuntu/DATA/repositories-python/getsentry__sentry/tests/sentry/utils/test_encryption.py:                ("2", Fernet(Fernet.generate_key())),
/media/ubuntu/DATA/repositories-python/getsentry__sentry/tests/sentry/utils/test_encryption.py:                ("1", Fernet("J5NxyG0w1OyZEDdEOX0Nyv2upm5H3J35rTEb1jEiVbs=")),
/media/ubuntu/DATA/repositories-python/localstack__localstack/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/docker__compose/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/trailofbits__algo/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/encode__django-rest-framework/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/apache__airflow/airflow/models/crypto.py:                Fernet(fernet_part.encode('utf-8'))
/media/ubuntu/DATA/repositories-python/apache__airflow/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/python-telegram-bot__python-telegram-bot/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/python-poetry__poetry/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/timgrossmann__InstaPy/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/sovereign__sovereign/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/mirumee__saleor/requirements_licma_analysis/graphene-federation-0.1.0/graphene-federation-0.1.0/graphene_federation/venv/lib64/python3.6/site-packages/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/mirumee__saleor/requirements_licma_analysis/graphene-federation-0.1.0/graphene-federation-0.1.0/graphene_federation/venv/lib/python3.6/site-packages/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/scrapinghub__portia/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/MagicStack__uvloop/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/Gallopsled__pwntools/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/boto__boto/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/asciimoo__searx/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/deis__deis/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/ajenti__ajenti/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/MobSF__Mobile-Security-Framework-MobSF/requirements_licma_analysis/cryptography-2.9.2-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/kivy__python-for-android/testapps/on_device_unit_tests/test_app/tests/test_requirements.py:        f = Fernet(key)
/media/ubuntu/DATA/repositories-python/readthedocs__readthedocs.org/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/jupyterhub__jupyterhub/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/vibora-io__vibora/vibora/sessions/client.py:        self.cipher = Fernet(secret_key)
/media/ubuntu/DATA/repositories-python/boto__boto3/docs/source/guide/kms-example-encrypt-decrypt-file.rst:        f = Fernet(data_key_plaintext)
/media/ubuntu/DATA/repositories-python/boto__boto3/docs/source/guide/kms-example-encrypt-decrypt-file.rst:        f = Fernet(data_key_plaintext)
/media/ubuntu/DATA/repositories-python/AlessandroZ__LaZagne/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/trustedsec__social-engineer-toolkit/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/taigaio__taiga-back/requirements_licma_analysis/cryptography-2.3.1-cp34-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/FeatureLabs__featuretools/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/docker__docker-py/requirements_licma_analysis/cryptography-2.3-cp34-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/SecureAuthCorp__impacket/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/smicallef__spiderfoot/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/SpiderClub__haipproxy/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/deepmipt__DeepPavlov/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/jrnl-org__jrnl/jrnl/EncryptedJournal.py:                plain = Fernet(key).decrypt(journal_encrypted).decode("utf-8")
/media/ubuntu/DATA/repositories-python/jrnl-org__jrnl/jrnl/EncryptedJournal.py:        journal = Fernet(key).encrypt(text.encode("utf-8"))
/media/ubuntu/DATA/repositories-python/flask-admin__flask-admin/requirements_licma_analysis/SQLAlchemy-Utils-0.36.8/SQLAlchemy-Utils-0.36.8/sqlalchemy_utils/types/encrypted/encrypted_type.py:        self.fernet = Fernet(self.secret_key)
/media/ubuntu/DATA/repositories-python/google__clusterfuzz/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/PKG-INFO:            >>> f = Fernet(key)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/README.rst:    >>> f = Fernet(key)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/docs/fernet.rst:.. class:: Fernet(key)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/docs/fernet.rst:        >>> f = Fernet(key)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/docs/fernet.rst:        >>> key1 = Fernet(Fernet.generate_key())
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/docs/fernet.rst:        >>> key2 = Fernet(Fernet.generate_key())
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/docs/fernet.rst:           >>> key1 = Fernet(Fernet.generate_key())
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/docs/fernet.rst:           >>> key2 = Fernet(Fernet.generate_key())
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/docs/fernet.rst:           >>> key3 = Fernet(Fernet.generate_key())
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/docs/fernet.rst:    >>> f = Fernet(key)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/docs/index.rst:    >>> f = Fernet(key)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/src/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/hypothesis/test_fernet.py:    f = Fernet(Fernet.generate_key())
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:    f = Fernet(Fernet.generate_key())
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f = Fernet(secret.encode("ascii"), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f = Fernet(secret.encode("ascii"), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f = Fernet(secret.encode("ascii"), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f = Fernet(Fernet.generate_key(), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:            Fernet(base64.urlsafe_b64encode(b"abc"), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f1 = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f2 = Fernet(base64.urlsafe_b64encode(b"\x01" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f1 = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f2 = Fernet(base64.urlsafe_b64encode(b"\x01" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f1 = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f2 = Fernet(base64.urlsafe_b64encode(b"\x01" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f1 = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f2 = Fernet(base64.urlsafe_b64encode(b"\x01" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f1 = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/desktop/core/ext-py/cryptography-2.9/tests/test_fernet.py:        f2 = Fernet(base64.urlsafe_b64encode(b"\x01" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/cloudera__hue/requirements_licma_analysis/channels_redis-2.3.2-py2.py3-none-any/channels_redis/core.py:        return Fernet(formatted_key)
/media/ubuntu/DATA/repositories-python/cloudera__hue/requirements_licma_analysis/cryptography-2.8-cp34-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/cloudera__hue/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/stewartmcgown__uds/requirements_licma_analysis/cryptography-2.3.1-cp34-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/django-crispy-forms__django-crispy-forms/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/Kinto__kinto/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/fastmonkeys__stellar/requirements_licma_analysis/SQLAlchemy-Utils-0.36.8/SQLAlchemy-Utils-0.36.8/sqlalchemy_utils/types/encrypted/encrypted_type.py:        self.fernet = Fernet(self.secret_key)
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__CrackMapExec/requirements_licma_analysis/cryptography-2.9-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/jarun__buku/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/conda__conda/test_data/env_metadata/envpy27osx/lib/python2.7/site-packages/cryptography-2.3.1-py2.7-macosx-10.6-x86_64.egg/EGG-INFO/PKG-INFO:    >>> f = Fernet(key)
/media/ubuntu/DATA/repositories-python/conda__conda/test_data/env_metadata/envpy27win_whl/Lib/site-packages/cryptography-2.3.1.dist-info/METADATA:    >>> f = Fernet(key)
/media/ubuntu/DATA/repositories-python/conda__conda/test_data/env_metadata/envpy37osx_whl/lib/python3.7/site-packages/cryptography-2.3.1.dist-info/METADATA:    >>> f = Fernet(key)
/media/ubuntu/DATA/repositories-python/conda__conda/test_data/env_metadata/py36-osx-whl/lib/python3.6/site-packages/cryptography-2.3.1.dist-info/METADATA:    >>> f = Fernet(key)
/media/ubuntu/DATA/repositories-python/offu__WeRoBot/requirements_licma_analysis/cryptography-2.9.2-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/QUANTAXIS__QUANTAXIS/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/eudicots__Cactus/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/pyca__cryptography/README.rst:    >>> f = Fernet(key)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/docs/fernet.rst:.. class:: Fernet(key)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/docs/fernet.rst:        >>> f = Fernet(key)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/docs/fernet.rst:        >>> key1 = Fernet(Fernet.generate_key())
/media/ubuntu/DATA/repositories-python/pyca__cryptography/docs/fernet.rst:        >>> key2 = Fernet(Fernet.generate_key())
/media/ubuntu/DATA/repositories-python/pyca__cryptography/docs/fernet.rst:           >>> key1 = Fernet(Fernet.generate_key())
/media/ubuntu/DATA/repositories-python/pyca__cryptography/docs/fernet.rst:           >>> key2 = Fernet(Fernet.generate_key())
/media/ubuntu/DATA/repositories-python/pyca__cryptography/docs/fernet.rst:           >>> key3 = Fernet(Fernet.generate_key())
/media/ubuntu/DATA/repositories-python/pyca__cryptography/docs/fernet.rst:    >>> f = Fernet(key)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/docs/index.rst:    >>> f = Fernet(key)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/src/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/hypothesis/test_fernet.py:    f = Fernet(Fernet.generate_key())
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:    f = Fernet(Fernet.generate_key())
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f = Fernet(secret.encode("ascii"), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f = Fernet(secret.encode("ascii"), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f = Fernet(secret.encode("ascii"), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f = Fernet(Fernet.generate_key(), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:            Fernet(base64.urlsafe_b64encode(b"abc"), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f1 = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f2 = Fernet(base64.urlsafe_b64encode(b"\x01" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f1 = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f2 = Fernet(base64.urlsafe_b64encode(b"\x01" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f1 = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f2 = Fernet(base64.urlsafe_b64encode(b"\x01" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f1 = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f2 = Fernet(base64.urlsafe_b64encode(b"\x01" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f1 = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/pyca__cryptography/tests/test_fernet.py:        f2 = Fernet(base64.urlsafe_b64encode(b"\x01" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/janeczku__calibre-web/requirements_licma_analysis/SQLAlchemy-Utils-0.36.8/SQLAlchemy-Utils-0.36.8/sqlalchemy_utils/types/encrypted/encrypted_type.py:        self.fernet = Fernet(self.secret_key)
/media/ubuntu/DATA/repositories-python/guardicore__monkey/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/python-trio__trio/requirements_licma_analysis/cryptography-2.9.2-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/cowrie__cowrie/requirements_licma_analysis/cryptography-2.9.2-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/zalando__connexion/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/mantl__mantl/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/theskumar__python-dotenv/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/samuelcolvin__pydantic/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/byt3bl33d3r__MITMf/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/r0oth3x49__udemy-dl/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/golemfactory__golem/requirements_licma_analysis/cryptography-2.7-cp34-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/freedomofpress__securedrop/requirements_licma_analysis/cryptography-2.7-cp34-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/freedomofpress__securedrop/requirements_licma_analysis/cryptography-2.6.1-cp34-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/cloud-custodian__cloud-custodian/requirements_licma_analysis/cryptography-2.9.2-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/dyve__django-bootstrap3/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/datawire__ambassador/requirements_licma_analysis/cryptography-2.9.2-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/ab77__netflix-proxy/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/ysrc__xunfeng/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/CTFd__CTFd/requirements_licma_analysis/SQLAlchemy-Utils-0.36.0/SQLAlchemy-Utils-0.36.0/sqlalchemy_utils/types/encrypted/encrypted_type.py:        self.fernet = Fernet(self.secret_key)
/media/ubuntu/DATA/repositories-python/OpenDroneMap__ODM/requirements_licma_analysis/cryptography-2.8-cp34-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/pritunl__pritunl/requirements_licma_analysis/cryptography-2.8-cp34-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/cryptography-1.9/cryptography-1.9/src/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/cryptography-1.9/cryptography-1.9/tests/hypothesis/test_fernet.py:    f = Fernet(Fernet.generate_key())
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/cryptography-1.9/cryptography-1.9/tests/test_fernet.py:    f = Fernet(Fernet.generate_key())
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/cryptography-1.9/cryptography-1.9/tests/test_fernet.py:        f = Fernet(secret.encode("ascii"), backend=backend)
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/cryptography-1.9/cryptography-1.9/tests/test_fernet.py:        f = Fernet(secret.encode("ascii"), backend=backend)
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/cryptography-1.9/cryptography-1.9/tests/test_fernet.py:        f = Fernet(secret.encode("ascii"), backend=backend)
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/cryptography-1.9/cryptography-1.9/tests/test_fernet.py:        f = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/cryptography-1.9/cryptography-1.9/tests/test_fernet.py:        f = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/cryptography-1.9/cryptography-1.9/tests/test_fernet.py:        f = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/cryptography-1.9/cryptography-1.9/tests/test_fernet.py:        f = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/cryptography-1.9/cryptography-1.9/tests/test_fernet.py:        f = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/cryptography-1.9/cryptography-1.9/tests/test_fernet.py:        f = Fernet(Fernet.generate_key(), backend=backend)
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/cryptography-1.9/cryptography-1.9/tests/test_fernet.py:            Fernet(base64.urlsafe_b64encode(b"abc"), backend=backend)
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/cryptography-1.9/cryptography-1.9/tests/test_fernet.py:        f1 = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/cryptography-1.9/cryptography-1.9/tests/test_fernet.py:        f2 = Fernet(base64.urlsafe_b64encode(b"\x01" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/cryptography-1.9/cryptography-1.9/tests/test_fernet.py:        f1 = Fernet(base64.urlsafe_b64encode(b"\x00" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/Chaosthebot__Chaos/requirements_licma_analysis/cryptography-1.9/cryptography-1.9/tests/test_fernet.py:        f2 = Fernet(base64.urlsafe_b64encode(b"\x01" * 32), backend=backend)
/media/ubuntu/DATA/repositories-python/wechatpy__wechatpy/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/guohongze__adminset/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
/media/ubuntu/DATA/repositories-python/novnc__websockify/requirements_licma_analysis/cryptography-3.0-cp35-abi3-manylinux1_x86_64/cryptography/fernet.py:class Fernet(object):
